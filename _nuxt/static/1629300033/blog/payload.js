__NUXT_JSONP__("/blog", {data:[{articles:[{description:"Java并发编程，是一项学习难度很高的技术。要想学好它，需要涉猎多方面的知识：1.操作系统知识，例如,线程的\"时间切片\",cpu指令的原子性,cpu缓存；2.jvm知识，如\"synchronized\",\"volidate\"等的原理，\"编译优化\"带来的有序性问题等;3.java自身的api，如java并发包。经过多年的编程和实践，我认为想学好一门技术，应该从两方面着手：广度和深度。所谓广度，是应该建立对知识认知的全景图，这样可以避免知识的遗忘，也可避免过于追求细节而无法自拔，误入歧途；所谓深度，在广度基础上，建立起一种理论:知识怎么来的?解决了什么问题?怎么使用更好?下面回到Java并发编程的话题上，聊一聊怎么学好它?",title:"怎么学好Java并发编程?",path:"\u002Fhow-to-study-java-concurrency"},{description:"Lifecycle-Aware，是google开发的用于生命周期感知的架构组件。",title:"Android架构组件Lifecycle-Aware源码解析",path:"\u002Flifecycle-aware-source-code-analysis"},{description:"我们在使用Markdown撰写文档的时候，除了熟练使用Markdown提供的标记语法之外，清晰的文档风格也很重要。本文试图探索一种良好的markdown风格，希望能够帮助你构建一篇排版清晰，结构分明的Markdown文章。",title:"Markdown风格指南",path:"\u002Fmarkdown-study-guide"}]}],fetch:{},mutations:[]});